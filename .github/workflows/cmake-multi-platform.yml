name: Build (Windows Only)

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  build:
    name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
    strategy:
      matrix:
        platform: [windows, ubuntu]
        build_type: [Debug, Release]
    env:
      PARALLEL: -j 2
    runs-on: "${{ matrix.platform }}-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - if: ${{ matrix.platform == 'ubuntu' }}
        name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev
      - if: ${{ matrix.platform == 'windows' }}
        name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - if: ${{ matrix.platform == 'windows' }}
        name: Configure and build
        shell: pwsh
        run: |
          cmake -B"build/${{ matrix.platform }}" -G "Ninja" `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DENABLE_GL_BACKEND=ON `
            -DENABLE_VK_BACKEND=ON 


          cmake --build "build/${{ matrix.platform }}" --target game_gl --config ${{ matrix.build_type }} -j 1
          cmake --build "build/${{ matrix.platform }}" --target game_vk --config ${{ matrix.build_type }} -j 1
      - if: ${{ matrix.platform == 'ubuntu' }}
        name: Configure and build
        run: |
          cmake -B"build/${{ matrix.platform }}" `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DENABLE_GL_BACKEND=ON `
            -DENABLE_VK_BACKEND=ON 


          cmake --build "build/${{ matrix.platform }}" --target game_gl --config ${{ matrix.build_type }}  ${{ env.PARALLEL }}
          cmake --build "build/${{ matrix.platform }}" --target game_vk --config ${{ matrix.build_type }}  ${{ env.PARALLEL }}
