# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      # Install Vulkan on Ubuntu
      - name: Install Vulkan SDK dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan-dev vulkan-utils

      # Install Vulkan SDK on Windows with Chocolatey
      - name: Install Vulkan SDK (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: choco install vulkan-sdk --yes

      # Optionally install vcpkg (or Conan) here for C++ dependencies
      - name: Setup vcpkg (Windows & Linux)
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          ./vcpkg/bootstrap-vcpkg.sh

      # Configure CMake with vcpkg toolchain file
      - name: Configure CMake
        run: |
          cmake -B ${{ steps.strings.outputs['build-output-dir'] }} -S ${{ github.workspace }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
            -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build ${{ steps.strings.outputs['build-output-dir'] }} --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{ steps.strings.outputs['build-output-dir'] }}
        run: ctest --build-config ${{ matrix.build_type }}
