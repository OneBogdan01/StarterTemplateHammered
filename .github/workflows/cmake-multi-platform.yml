# From https://github.com/KhronosGroup/Vulkan-Samples/blob/main/.github/workflows/build.yml
name: Build Project

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: "Build ${{ matrix.platform }} in ${{ matrix.build_type }}"
    strategy:
      matrix:
        platform: [windows, ubuntu]
        build_type: [Debug, Release]
        backend: [gl, vk]
    env:
      PARALLEL: -j 2
    runs-on: "${{ matrix.platform }}-latest"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"
      - if: ${{ matrix.platform == 'ubuntu' }}
        name: Install RandR headers
        run: |
          sudo apt-get update
          sudo apt install xorg-dev libglu1-mesa-dev
      - if: ${{ matrix.platform == 'windows' }}
        name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
      - if: ${{ matrix.platform == 'windows' }}
        name: sccache
        uses: hendrikmuhs/ccache-action@v1.2.9
        with:
          key: ${{ github.job }}-${{ matrix.os }}
          variant: sccache
      - if: ${{ matrix.platform != 'windows' }}
        name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.9
        with:
          key: ${{ github.job }}-${{ matrix.os }}
      - if: ${{ matrix.platform == 'windows' }}
        name: Configure and Build (Windows)
        shell: pwsh
        run: |
          $gl = if ("${{ matrix.backend }}" -eq "gl") { "ON" } else { "OFF" }
          $vk = if ("${{ matrix.backend }}" -eq "vk") { "ON" } else { "OFF" }

          cmake -B build/${{ matrix.platform }} -G "Ninja" `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DENABLE_GL_BACKEND=$gl `
            -DENABLE_VK_BACKEND=$vk `
            -DCMAKE_C_COMPILER_LAUNCHER=C:\Users\runneradmin\.cargo\bin\sccache `
            -DCMAKE_CXX_COMPILER_LAUNCHER=C:\Users\runneradmin\.cargo\bin\sccache

          cmake --build build/${{ matrix.platform }} --target game_${{ matrix.backend }} --config ${{ matrix.build_type }} -j 2

      - if: ${{ matrix.platform != 'windows' }}
        name: Configure and Build (Linux)
        run: |
          cmake -B build/${{ matrix.platform }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DENABLE_GL_BACKEND=$([ "${{ matrix.backend }}" = "gl" ] && echo ON || echo OFF) \
            -DENABLE_VK_BACKEND=$([ "${{ matrix.backend }}" = "vk" ] && echo ON || echo OFF)
          cmake --build build/${{ matrix.platform }} --target game_${{ matrix.backend }} --config ${{ matrix.build_type }} ${{ env.PARALLEL }}
